name: 'test'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, reopened, synchronize, labeled ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: env.yml
          environment-name: test-env
          create-args: >-
            python=${{matrix.python-version}}

      - name: Install package
        shell: bash -el {0}
        run: |
          python -m pip install -e .

      - name: run pytests
        shell: bash -el {0}
        run: |
          python -m pytest -v tests/

  test-conda-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Conda build environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ci/conda-envs/mamba-build.yml

      - name: Build Conda package
        shell: bash -el {0}
        run: |
          conda mambabuild conda.recipe --output-folder pkgs/ -c usask-arg-nightly

  build-docker:
    name: Build and push Docker image
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
